syntax="proto3";
package service;
option go_package="/service;service";

import "statuscode.proto";
import "struct.proto";

message RegisterArgs {
    DataNodeInfo Info = 1;
}

message RegisterReply {
    StatusCode Status = 1;
    int32 Id = 2;
}

message HeartBeatArgs {
    int32 Id = 1;
    DataNodeLoad Load = 2;
}

message HeartBeatReply {
    StatusCode Status = 1;
    repeated string CleanBlockId = 2;
}

message BlockReportArgs {
    int32 Id = 1;
    repeated BlockInfo Blocks = 2;
}

message BlockReportReply {
    StatusCode Status = 1;
}

message NewBlockReportArgs {
    int32 Id = 1;
    int64 EntryId = 2;
    BlockInfo Block = 3;
}

message NewBlockReportReply {
    StatusCode Status = 1;
}

message GetSystemInfoArgs {

}

message GetSystemInfoReply {
    NameNodeStatus NnStatus = 1;
    int32 ReplicaNum = 2;
    int64 BlockSize = 3;
    repeated DataNodeInfo DataNodes = 4;
}

message PutFileArgs {
    string Path = 1;
    string FileName = 2;
    int64 FileSize = 3;
}

message PutFileReply {
    StatusCode Status = 1;
    FileStatus FileStatus = 2;
    int64 BlockSize = 3;
    int64 EntryId = 4;
    repeated string BlockId = 5;
}

message PutBlockArgs {
    int64 EntryId = 1;
    string BlockId = 2;
    int64 BlockSize = 3;
}

message PutBlockReply {
    StatusCode Status = 1;
    repeated DataNodeNetInfo DataNodes = 2;
}

message GetFileArgs {
    string Path = 1;
}

message GetFileReply {
    StatusCode Status = 1;
    FileStatus FileStatus = 2;
    repeated GetFileStruct Blocks = 3;
}

message MkdirArgs {
    string Path = 1;
    string DirName = 2;
}

message MkdirReply {
    StatusCode Status = 1;
    FileStatus FileStatus = 2;
}

message ListArgs {
    string Path = 1;
}

message ListReply {
    StatusCode Status = 1;
    FileStatus FileStatus = 2;
    repeated string Files = 3;
}

message RenameArgs {
    string Path = 1;
    string NewName = 2;
}

message RenameReply {
    StatusCode Status = 1;
    FileStatus FileStatus = 2;
}

message DeleteArgs {
    string Path = 1;
}

message DeleteReply {
    StatusCode Status = 1;
    FileStatus FileStatus = 2;
}

message StatArgs {
    string Path = 1;
}

message StatReply {
    StatusCode Status = 1;
    FileStatus FileStatus = 2;
    FileInfo Info = 3;
}

message GetLeaseArgs {
}

message GetLeaseReply {
    StatusCode Status = 1;
    NameNodeStatus NameNodeStatus = 2;
}

message RenewLeaseArgs {
}

message RenewLeaseReply {
}

message ReleaseLeaseArgs {
}

message ReleaseLeaseReply {
}

service NameNodeService {
    rpc BlockReport(BlockReportArgs) returns(BlockReportReply);
    rpc Delete(DeleteArgs) returns(DeleteReply);
    rpc GetFile(GetFileArgs) returns(GetFileReply);
    rpc GetLease(GetLeaseArgs) returns(GetLeaseReply);
    rpc GetSystemInfo(GetSystemInfoArgs) returns(GetSystemInfoReply);
    rpc HeartBeat(HeartBeatArgs) returns(HeartBeatReply);
    rpc List(ListArgs) returns(ListReply);
    rpc Mkdir(MkdirArgs) returns(MkdirReply);
    rpc NewBlockReport(NewBlockReportArgs) returns(NewBlockReportReply);
    rpc PutFile(PutFileArgs) returns(PutFileReply);
    rpc PutBlock(PutBlockArgs) returns(PutBlockReply);
    rpc Register(RegisterArgs) returns(RegisterReply);
    rpc Rename(RenameArgs) returns(RenameReply);
    rpc RenewLease (RenewLeaseArgs) returns (RenewLeaseReply);
    rpc ReleaseLease (ReleaseLeaseArgs) returns (ReleaseLeaseReply);
    rpc Stat(StatArgs) returns(StatReply);
}